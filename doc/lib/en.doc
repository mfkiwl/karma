/*  Link with:    -lkarma  */
/*  This file describes the en_ package of routines in the Karma library.

    These routines are meant to provide strong encryption.


    Written by		Richard Gooch	13-Dec-1994

    Last updated by	Richard Gooch	13-Dec-1994


*/

idea_status en_idea_init (char key[EN_IDEA_KEY_SIZE], flag decrypt,
			  char init_vector[EN_IDEA_BLOCK_SIZE], flag clear)
/*  This routine will initialise the IDEA cipher in Cipher Feed Back mode for
    a stream of data. The stream is uni-directional.
    The 16 byte IDEA key must be pointed to by  key  .
    If the stream is to be decrypted, the value of  decrypt  must be TRUE.
    The 8 byte initialisation vector must be pointed to by  init_vector  .
    If the value of  clear  is TRUE the key and initialisation vector will be
    cleared after use (highly recommended if they will not be needed again).
    The routine returns an IDEA cipher status which may be sebsequently used by
    en_idea_cfb  on success, else it returns NULL.
*/
/*---------------------------------------------------------------------------*/

void en_idea_cfb (idea_status status, char *buffer, unsigned int length)
/*  This routine will encrypt (or decrypt) a sequence of bytes using the IDEA
    cipher in Cipher Feed Back mode.
    The IDEA cipher status must be given by  status  .
    The data to encrypt must be pointed to by  buffer  .
    The number of bytes to encrypt (or decrypt) must be given by  length  .
    The routine returns nothing.
*/
/*---------------------------------------------------------------------------*/

void en_idea_close (idea_status status)
/*  This routine will clean up an IDEA cipher status, removing sensitive key
    information.
    The IDEA cipher status must be given by  status  .
    The routine returns nothing.
*/
/*---------------------------------------------------------------------------*/
