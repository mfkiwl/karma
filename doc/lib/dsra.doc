/*  Link with:    -lkarma  */
/*  This file describes the dsra_ package of routines in the Karma
    library.

    These routines are meant to provide a mechanism to read the recursive,
    heirarchical data structure supported in Karma from open channels, in
    ASCII format.
    The use of these routines is NOT recommended. The dsxfr_ routines are the
    preferred means of transferring data structures.


    Written by		Richard Gooch	5-Jun-1995

    Last updated by	Richard Gooch	5-Jun-1995


*/

multi_array *dsra_multi_desc (channel)
/*  This routine will read the ASCII representation of the multi array general
    data structure header from the channel object given by  channel  and
    will allocate the required descriptors.
    NOTE: this routine will NOT allocate space for data, nor will it read any
    data.
    The routine returns a pointer to the multi array header on success, else
    it displays an error message and returns NULL.
*/
Channel channel;
/*---------------------------------------------------------------------------*/

packet_desc *dsra_packet_desc (channel)
/*  This routine will read the channel object given by  channel  for
    a packet descriptor.
    The routine will recursively read in array and linked list descriptors
    if required.
    The routine returns a pointer to the packet descriptor. NULL is returned
    if an error occured (the routine prints error messages).
*/
Channel channel;
/*---------------------------------------------------------------------------*/

flag dsra_element_desc (channel, type, name)
/*  This routine will read the channel object given by  channel  for an element
    descriptor. The type of the element is written to the storage pointed to
    by  type  and the name is written to the character string  name  .
    The routine returns TRUE if a valid element descriptor was read, else
    it displays an error message and returns FALSE.
*/
Channel channel;
unsigned int *type;
char name[];
/*---------------------------------------------------------------------------*/

array_desc *dsra_array_desc (channel, type)
/*  This routine will read in an array descriptor from the channel given by
    channel  .
    The type of the array must be given by  type  .Legal values for this are:
        ARRAYP    K_ARRAY
    The routine returns a pointer to the array descriptor if there were no
    errors in reading, else it displays an error message and returns NULL.
*/
Channel channel;
unsigned int type;
/*---------------------------------------------------------------------------*/

dim_desc *dsra_dim_desc (channel)
/*  This routine will read the channel object given by  channel  for
    a dimension descriptor.
    The routine returns a pointer to the dimension descriptor if there were no
    errors in reading, else it displays an error message and returns NULL.
*/
Channel channel;
/*---------------------------------------------------------------------------*/

flag dsra_multi_data (channel, multi_desc)
/*  This routine will read the ASCII representation of the data in a multi
    array general data structure header from the channel object given by
    channel  and will write the data into the multi_array structure pointed to
    by  multi_desc  .
    NOTE: this routine will only allocate space for linked list as it reads
    them.
    The routine returns TRUE on success, else it returns FALSE.
*/
Channel channel;
multi_array *multi_desc;
/*---------------------------------------------------------------------------*/

flag dsra_packet (channel, descriptor, packet)
/*  This routine will read the ASCII representation of the data packet
    from the channel object given by  channel  .
    The descriptor for the packet must be pointed to by  descriptor  and the
    data will be written to the storage pointed to by  packet  .
    The routine will recursively read in sub arrays and linked lists.
    The routine returns TRUE on success, else it displays an error message
    and returns FALSE.
*/
Channel channel;
packet_desc *descriptor;
char *packet;
/*---------------------------------------------------------------------------*/

flag dsra_element (channel, type, desc, element)
/*  This routine will read the ASCII representation of an element from the
    channel object given by  channel  and will write the value to the storage
    pointed to by  element  .The type of the element to read must be in  type
    and the descriptor for the element must be pointed to by  desc  .
    The routine returns TRUE on success, else it returns FALSE.
*/
Channel channel;
unsigned int type;
char *desc;
char *element;
/*---------------------------------------------------------------------------*/

flag dsra_array (channel, descriptor, array)
/*  This routine will read in the ASCII representation of an array of data
    packets from the channel object given by  channel  .
    The array descriptor must be pointed to by  descriptor  and the data will
    be written to the storage pointed to by  array  .
    The routine returns TRUE on success, else it displays an error message
    and returns FALSE.
*/
Channel channel;
array_desc *descriptor;
char *array;
/*---------------------------------------------------------------------------*/

flag dsra_list (channel, descriptor, header)
/*  This routine will read in the ASCII representation of a linked list of
    data from the channel object given by  channel  .
    The descriptor for the packets must be pointed to by  descriptor  and the
    linked list header must be pointed to by  header  .
    The routine will recursively read in sub arrays and linked lists.
    The linked list entries will be contiguous in memory.
    The routine returns TRUE on success, else it displays an error message
    and returns FALSE.
*/
Channel channel;
packet_desc *descriptor;
list_header *header;
/*---------------------------------------------------------------------------*/

flag dsra_flag (channel, logical)
/*  This routine will read in the ASCII representation of the the boolean
    flag from the channel object given by  channel  and will write it to the
    flag pointed to by  logical  .
    The routine returns TRUE if the flag was read in without error, else
    it returns FALSE.
*/
Channel channel;
flag *logical;
/*---------------------------------------------------------------------------*/

flag dsra_type (channel, type)
/*  This routine will read in the ASCII representation of the data type from
    the channel object given by  channel  and will write the type value into
    the storage pointed to by  type  .
    The routine returns TRUE if the type was read without error, else it
    returns FALSE.
*/
Channel channel;
unsigned int *type;
/*---------------------------------------------------------------------------*/

flag dsra_uint (channel, value)
/*  This routine will read the ASCII representation of an unsigned integer
    value from the channel object given by  channel  .
    The result is written into the storage pointed to by  value  .
    The routine returns TRUE if successful, else it displays an error message
    and returns FALSE.
*/
Channel channel;
unsigned int *value;
/*---------------------------------------------------------------------------*/

flag dsra_int (channel, value)
/*  This routine will read the ASCII representation of a signed integer
    value from the channel object given by  channel  .
    The result is written into the storage pointed to by  value  .
    The routine returns TRUE if successful, else it displays an error message
    and returns FALSE.
*/
Channel channel;
int *value;
/*---------------------------------------------------------------------------*/

flag dsra_float (channel, value)
/*  This routine will read the ASCII representation of a floating point
    value from the channel object given by  channel  .
    The result is written into the storage pointed to by  value  .
    The routine returns TRUE if successful, else it displays an error message
    and returns FALSE.
*/
Channel channel;
float *value;
/*---------------------------------------------------------------------------*/

flag dsra_double (channel, value)
/*  This routine will read the ASCII representation of a double floating point
    value from the channel object given by  channel  .
    The result is written into the storage pointed to by  value  .
    The routine returns TRUE if successful, else it displays an error message
    and returns FALSE.
*/
Channel channel;
double *value;
/*---------------------------------------------------------------------------*/
