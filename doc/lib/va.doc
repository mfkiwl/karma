$PACKAGE          va
$SUMMARY          Routines to perform optimised vector arithmetic operations
$PURPOSE
    These routines are meant to provide a suite of arithmetic operations on
    vectors (arrays) of data.
    These routines are highly optimised, with many inner loops coded in
    assembler to achieve sustained performance approaching (and in some cases
    equalling) the rated peak performance of the hardware.
    On some platforms, a speed improvment of over 30 times has been attained by
    coding in assembler.
$LIBRARY          karma
$LINKWITH         -lkarma
$END

$FUNCTION           va_scale_float
$RETURN_TYPE        void
$PARAMETER_LIST
    (float *out, int out_stride, float *inp, int inp_stride,
		     int length, float scale, float offset)
$SUMMARY            Scale and offset an array of floats.
$PURPOSE
    This routine will perform a scale and offset operation on an
    array of floating point numbers. The arithmetic form is as follows:
    out[i] = inp[i] * scale + offset
$PARAMETER          out :
    The result array will be written here.
$PARAMETER          out_stride :
    The stride (in floats) of consecutive elements in the output
    array.
$PARAMETER          inp :
    The input array.
$PARAMETER          inp_stride :
    The stride (in floats) of consecutive elements in the input
    array.
$NOTE
    The elements of the input and output arrays must be aligned on a
    float boundary.
$PARAMETER          length :
    The length of the input and output arrays.
$PARAMETER          scale :
    The scale factor.
$PARAMETER          offset :
    The offset value.
$RETURNS
    Nothing.
$END
