/*  Link with:    -lkarma  */
/*  This file describes the imc_ package of routines in the Karma library.

    These routines provide a number of image conversion routines.


    Written by		Richard Gooch	5-Jun-1995

    Last updated by	Richard Gooch	5-Jun-1995


*/

flag imc_24to8 (unsigned int image_size, unsigned char *image_reds,
		unsigned char *image_greens, unsigned char *image_blues,
		int stride24, unsigned char *out_image, int stride8,
		unsigned int max_colours, unsigned int speed,
		packet_desc **pack_desc, char **packet)
/*  This routine will convert a 24 bit truecolour image to an 8 bit
    pseudocolour image.
    The size of the image (in pixels) must be given by  image_size  .
    The red component data of the truecolour image must be pointed to by
    image_reds  .
    The green component data of the truecolour image must be pointed to by
    image_greens  .
    The blue component data of the truecolour image must be pointed to by
    image_blues  .
    The stride (in bytes) between adjacent pixels in the truecolour image must
    be given by  stride24  .
    The output (8 bit pseudocolour) image date must be pointed to by  out_image
    The stride (in bytes) between adjacent pixels in the pseudocolour image
    must be given by  stride8  .
    The maximum number of unique colours permitted (ie. the maximum colour
    palette size that can be supported) must be given by  max_colours  .
    The desired speed of the routine must be given by  speed  .This value may
    range from 0 to 9. A value of 0 will result in the slowest but highest
    quality conversion (ie. the routine tries very hard to choose the best
    colour palette). A value of 9 will result in the fastest conversion, at the
    expense of image quality.
    The pointer to the top level packet descriptor of the general data
    structure which contains the colourmap will be written to the storage
    pointed to by  pack_desc  .
    The pointer to the top level packet of the general data structure which
    contains the colourmap will be written to the storage pointed to by  
    packet  .
    The routine returns TRUE on success, else it returns FALSE.
*/
/*---------------------------------------------------------------------------*/
